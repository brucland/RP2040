// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------- //
// stepper //
// ------- //

#define stepper_wrap_target 7
#define stepper_wrap 12

static const uint16_t stepper_program_instructions[] = {
    0xe001, //  0: set    pins, 1                    
    0x80a0, //  1: pull   block                      
    0xa0c7, //  2: mov    isr, osr                   
    0x80a0, //  3: pull   block                      
    0xa047, //  4: mov    y, osr                     
    0xe000, //  5: set    pins, 0                    
    0x00c6, //  6: jmp    pin, 6                     
            //     .wrap_target
    0x00ea, //  7: jmp    !osre, 10                  
    0x00c0, //  8: jmp    pin, 0                     
    0xa0e2, //  9: mov    osr, y                     
    0x6004, // 10: out    pins, 4                    
    0xa026, // 11: mov    x, isr                     
    0x004c, // 12: jmp    x--, 12                    
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program stepper_program = {
    .instructions = stepper_program_instructions,
    .length = 13,
    .origin = -1,
};

static inline pio_sm_config stepper_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + stepper_wrap_target, offset + stepper_wrap);
    return c;
}

// this is a raw helper function for use by the user which sets up the GPIO output, 
//   and configures the SM to output on a particular pin
void stepper_program_init(PIO pio, uint sm, uint offset, uint pin) {
   pio_gpio_init(pio, pin);
   pio_gpio_init(pio, pin+1);
   pio_gpio_init(pio, pin+2);
   pio_gpio_init(pio, pin+3);
   pio_gpio_init(pio, 10); // ACK
   //
   pio_sm_set_out_pins (pio, sm, pin, 4) ;
   pio_sm_set_consecutive_pindirs(pio, sm, pin, 4, true); 
   pio_sm_set_set_pins (pio, sm, 10, 1) ; // ACK
   pio_sm_set_consecutive_pindirs(pio, sm, 10, 1, true); // ACK
   //
   pio_sm_config c = stepper_program_get_default_config(offset);
   //
   // Using 'out' and 'set' 
   sm_config_set_out_pins(&c, pin, 4);
   sm_config_set_set_pins(&c, 10, 1); // ACK
   //
   // JMP pin is specified separately as GPIO #, GPIO 4
   sm_config_set_jmp_pin (&c, 4) ;
   //
   // the out FIFO, shift right, no autopull, threshold 31
   sm_config_set_out_shift (&c, true, false, 31) ;
   pio_sm_init(pio, sm, offset, &c);
}

#endif
